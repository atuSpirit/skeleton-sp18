Q: Can you think of an analogy between the process of tesselating hexagons and randomly generating a world using rooms and hallways? 
What is the hexagon and what is the tesselation on the project 2 side?

A:

-----
Q: If you were to start working on world generation, what kind of method would you think of writing first? 
Think back to the lab and the process used to eventually get to tesselating hexagons.
generateRoom(Position start, int width, int length)
generateHallway(Position start, char direction, int length)
fillFloor()
A:

-----
Q: What distinguishes a hallway from a room? How are they similar?
hallway must connect to open place;
hallway must have width 1
room has walls.  If a position in a wall is used as the start of a hallway, it will be substituted as floor

A:

-----
Q: For tesselating hexagons, one of the hardest parts is figuring out where to place each hexagon/how to easily place hexagons on screen in an algorithmic way. 
After looking at your own implemention, consider the implementation provided near the end of the lab. 
How did your implementation differ from the given one? What lessons can be learned from it?

A:

-----
Q: Consider an algorithm for placing rooms and hallways on your map. 
Ideally, consider many algorithms and think about what makes some easier or harder to implement. Try and bring those ideas together into a single simple algorithm which accomplishes the task. 
In general, algorithms with as few edge cases as possible are better algorithms.

A:
